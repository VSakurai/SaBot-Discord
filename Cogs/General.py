import platform
import random
import datetime
import aiohttp
import discord
from discord import app_commands
from discord.ext import commands
from discord.ext.commands import Context

from typing import List, Dict, Union, Optional

from helpers import checks
from Settings import config

class CogGeneral(commands.Cog, name="general"):
    def __init__(self, bot):
        self.bot = bot
        self.api_urls = {
            'kiss': 'https://nekos.life/api/v2/img/kiss',
            'slap': 'https://nekos.life/api/v2/img/slap',
            'hug': 'https://nekos.life/api/v2/img/hug'
        }

    async def _get_action_image(self, action):
        async with aiohttp.ClientSession() as session:
            try:
                async with session.get(self.api_urls[action]) as response:
                    data = await response.json()
                return data['url']
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ {action} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")
                return None

    @commands.hybrid_command(
    name="kiss",
    description="–ü–æ—Ü–µ–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞"
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def kiss(self, ctx, user: discord.User, *, reason: str = "–∏–∑-–∑–∞ –ª—é–±–≤–∏"):
        image_url = await self._get_action_image('kiss')
        if image_url:
            embed = discord.Embed(
                title="üíã‚†Ä**–ü–æ—Ü–µ–ª—É–π**",
            description=f"{ctx.author.mention} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) {user.mention}",
                color=config.EMBED_COLOR
            ).add_field(
                name="**–ü—Ä–∏—á–∏–Ω–∞**",
                value=reason,
                inline=False
            )
            embed.set_image(url=image_url)
            await ctx.send(embed=embed)
        else:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ü–µ–ª—É—è.")

    @commands.hybrid_command(
    name="slap",
    description="–£–¥–∞—Ä–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞"
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def slap(self, ctx, user: discord.User, *, reason: str = "–∑–∞ –ø–ª–æ—Ö–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ"):
        image_url = await self._get_action_image('slap')
        if image_url:
            embed = discord.Embed(
                title="üëã‚†Ä**–ü–æ—â–µ—á–∏–Ω–∞**",
                description=f"{ctx.author.mention} —É–¥–∞—Ä–∏–ª(–∞) {user.mention}",
                color=config.EMBED_COLOR
            ).add_field(
                name="**–ü—Ä–∏—á–∏–Ω–∞**",
                value=reason,
                inline=False
            )
            embed.set_image(url=image_url)
            await ctx.send(embed=embed)
        else:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—â–µ—á–∏–Ω—ã.")

    @commands.hybrid_command(
    name="hug",
    description="–û–±–Ω—è—Ç—å —á–µ–ª–æ–≤–µ–∫–∞"
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def hug(self, ctx, user: discord.User, *, reason: str = "–∏–∑-–∑–∞ –¥—Ä—É–∂–±—ã"):
        image_url = await self._get_action_image('hug')
        if image_url:
            embed = discord.Embed(
                title="ü§ó‚†Ä**–û–±—ä—è—Ç–∏–µ**",
                description=f"{ctx.author.mention} –æ–±–Ω—è–ª(–∞) {user.mention}",
                color=config.EMBED_COLOR
            ).add_field(
                name="**–ü—Ä–∏—á–∏–Ω–∞**",
                value=reason,
                inline=False
            )
            embed.set_image(url=image_url)
            await ctx.send(embed=embed)
        else:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–Ω–∏–º–∞–Ω–∏–µ.")

    @commands.hybrid_command(
    name="rand",
    aliases=["r"],
    description="–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ"
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def rand(self, ctx, a: Optional[int] = 0, b: Optional[int] = None):
        if b is None:
            b = a
            a = 0
        if a > b:
            a, b = b, a
        await ctx.send(random.randint(a, b))

    @commands.hybrid_command(
    name="inviteinfo",
    aliases=["invite", "linkinfo"],
    description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏"
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def inviteinfo(self, ctx: commands.Context, invite_code: str):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏, –≤–∫–ª—é—á–∞—è –¥–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–≤–µ—Ä–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∫–æ–º–∞–Ω–¥–µ "serverinfo" –µ—Å–ª–∏ –±–æ—Ç –µ—Å—Ç—å –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.

        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
            {prefix}inviteinfo <invite_code>

        –ü—Ä–∏–º–µ—Ä:
            {prefix}inviteinfo ABCD1234
        """
        server_embed = None
        try:
            invite = await self.bot.fetch_invite(invite_code)
        except discord.errors.NotFound:
            return await ctx.send(f"–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ `{invite_code}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.")

        if invite.guild is not None:
            server_cog = self.bot.get_cog("server")
        if server_cog is not None:
            server_embed = await server_cog._generate_server_info_embed(invite.guild)

        if invite.max_age is not None:
            created_at_str = invite.created_at.strftime('%Y-%m-%d %H:%M:%S')
        else:
            created_at_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

        if invite.expires_at is not None:
            expires_at_str = invite.expires_at.strftime('%Y-%m-%d %H:%M:%S')
        else:
            expires_at_str = "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        invite_uses = invite.uses
        if invite_uses is None:
            invite_uses = 0

        embed = discord.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ {invite.url}",
            color=config.EMBED_COLOR
        )
        embed.add_field(name="–ö–æ–¥ —Å—Å—ã–ª–∫–∏", value=invite_code)
        embed.add_field(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=invite.max_age)
        embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π", value=invite_uses)
        embed.add_field(name="–°–æ–∑–¥–∞—Ç–µ–ª—å", value=invite.inviter)
        embed.add_field(name="–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è", value=created_at_str)
        embed.add_field(name="–í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è", value=expires_at_str)
        if server_embed:
            embed.add_field(
                name="–°–µ—Ä–≤–µ—Ä", 
                value=f"[{invite.guild.name}]({invite.guild.icon_url})", 
                inline=False
            )
            embed.add_field(
                name="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ", 
                value=f"{server_embed.description}\n{server_embed.fields[0].value}\n{server_embed.fields[1].value}"
            )
        await ctx.send(embed=embed)

    @commands.hybrid_command(
        name="ping",
        description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞",
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    async def ping(self, context: Context) -> None:
        """
        –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∂–∏–≤ –ª–∏ –±–æ—Ç.

        :param context: T–∫–æ–Ω—Ç–µ–∫—Å—Ç –≥–∏–±—Ä–∏–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.
        """
        embed = discord.Embed(
            title="üèì –ü–æ–Ω–≥!",
            description=f"–ó–∞–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞ {round(self.bot.latency * 1000)}ms.",
            color=config.EMBED_COLOR
        )
        await context.send(embed=embed)

    @commands.hybrid_command(
        name="avatar",
        description="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    )
    @checks.not_blacklisted()
    async def avatar(self, ctx: commands.Context, member: Optional[discord.Member] = None) -> None:
        if not member:
            member = ctx.author

        if member.avatar:
            avatar_url = member.avatar.url
            if member.avatar.is_animated():
                await ctx.send(f"{member}'s –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä: {avatar_url}")
            else:
                await ctx.send(f"{member}'s –∞–≤–∞—Ç–∞—Ä: {avatar_url}")
        else:
            await ctx.send(f"{member} –Ω–µ –∏–º–µ–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞.")

    @commands.hybrid_command(
    name="8ball",
    description="–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É.",
    )
    @commands.has_permissions(manage_messages=True)
    @checks.not_blacklisted()
    @app_commands.describe(question="–í–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å.")
    async def eight_ball(self, ctx, *, question: str) -> None:
        """
        –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É.

        :param context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≥–∏–±—Ä–∏–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.
        :param question: –í–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –∑–∞–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
        """
        # –ù–∞—Ö–æ–¥–∏–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≤–æ–ø—Ä–æ—Å–µ –∏ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏—Ö
        escaped_question = discord.utils.escape_mentions(question)

        answers = ["–≠—Ç–æ —Ç–æ—á–Ω–æ.", "–≠—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ —Ç–∞–∫.", "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞ —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è.", "–ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏—è.",
                   "–î–∞, –±–µ–∑—É—Å–ª–æ–≤–Ω–æ.", "–ö–∞–∫ —è –≤–∏–∂—É, –¥–∞.", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ.", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ —Ö–æ—Ä–æ—à–∞—è.", "–î–∞.",
                   "–ó–Ω–∞–∫–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –¥–∞.", "–û—Ç–≤–µ—Ç —Ç—É–º–∞–Ω–Ω—ã–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", "–°–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–∑–∂–µ, —è –Ω–∞ –ø–µ–¥–∏–∫—é—Ä.", "–õ—É—á—à–µ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–µ–±–µ —Å–µ–π—á–∞—Å.",
                   "–ù–µ –º–æ–≥—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Å–µ–π—á–∞—Å.", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏ —Å–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–∑–∂–µ.", "–ù–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ —ç—Ç–æ.", "–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç.",
                   "–ú–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ –Ω–µ—Ç.", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å.", "–û—á–µ–Ω—å —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ."]
        embed = discord.Embed(
            title="üé± 8ball",
            description="–°–º–æ—Ç—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!",
            color=config.EMBED_COLOR
        )
        embed.add_field(
            name="üí¨ –í–∞—à –≤–æ–ø—Ä–æ—Å",
            value=f"`{escaped_question}`",
            inline=False
        )

        # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≤–æ–ø—Ä–æ—Å–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ –æ—Ç–≤–µ—Ç—É
        user_mentions = ctx.message.mentions
        if user_mentions:
            mentioned_users = [user.mention for user in user_mentions]
            user_string = ', '.join(mentioned_users)
            embed.add_field(
                name="üë• –£–ø–æ–º—è–Ω—É—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                value=user_string,
                inline=False
            )

        embed.add_field(
            name="ü§ñ –û—Ç–≤–µ—Ç –±–æ—Ç–∞",
            value=f"`{random.choice(answers)}`",
            inline=False
        )
        await ctx.reply(embed=embed)

async def setup(bot):
    await bot.add_cog(CogGeneral(bot))